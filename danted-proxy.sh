#!/bin/bash
set -e

echo "üöÄ B·∫Øt ƒë·∫ßu c√†i ƒë·∫∑t Dante SOCKS5 Proxy..."

# ==========================
# 1. C·∫≠p nh·∫≠t h·ªá th·ªëng
# ==========================
echo "[1/10] C·∫≠p nh·∫≠t h·ªá th·ªëng & c√†i ƒë·∫∑t g√≥i c·∫ßn thi·∫øt..."
apt update -y && apt upgrade -y
apt install -y dante-server dnsutils curl cron nano ufw logrotate

# ==========================
# 2. T·∫°o swap 2GB
# ==========================
echo "[2/10] T·∫°o swap 2GB..."
SWAPFILE="/swapfile"
if [ ! -f $SWAPFILE ]; then
    fallocate -l 2G $SWAPFILE
    chmod 600 $SWAPFILE
    mkswap $SWAPFILE
    swapon $SWAPFILE
    echo "$SWAPFILE none swap sw 0 0" >> /etc/fstab
else
    echo "Swap ƒë√£ t·ªìn t·∫°i, b·ªè qua."
fi

# ==========================
# 3. X√°c ƒë·ªãnh interface m·∫°ng
# ==========================
echo "[3/10] X√°c ƒë·ªãnh interface m·∫°ng..."
IFACE=$(ip route get 8.8.8.8 | awk '{print $5; exit}')
echo "Interface m·∫°ng: $IFACE"

# ==========================
# 4. Vi·∫øt c·∫•u h√¨nh Dante ban ƒë·∫ßu
# ==========================
echo "[4/10] Vi·∫øt c·∫•u h√¨nh /etc/danted.conf..."
cat > /etc/danted.conf <<EOF
logoutput: /var/log/danted.log
internal: $IFACE port = 1080
external: $IFACE

socksmethod: none
user.privileged: proxy
user.notprivileged: nobody

# Ch·∫∑n m·∫∑c ƒë·ªãnh
block {
    from: 0.0.0.0/0 to: 0.0.0.0/0
}
EOF

# ==========================
# 5. T·∫°o template & script c·∫≠p nh·∫≠t
# ==========================
echo "[5/10] T·∫°o template v√† script c·∫≠p nh·∫≠t..."

cp /etc/danted.conf /etc/danted.conf.template

cat > /usr/local/bin/update-danted.sh <<'EOL'
#!/bin/bash
DOMAINS=("nhahqv23jvtr.duckdns.org" "nhahqv6349fal342hcx23.duckdns.org")
TEMPLATE="/etc/danted.conf.template"
CONFIG="/etc/danted.conf"

cp "$TEMPLATE" "$CONFIG"

for DOMAIN in "${DOMAINS[@]}"; do
    IP=$(dig +short $DOMAIN @8.8.8.8 | tail -n 1)
    if [[ -n "$IP" ]]; then
        echo "C·∫≠p nh·∫≠t $DOMAIN -> $IP"
        echo "client pass { from: $IP/32 to: 0.0.0.0/0 }" >> "$CONFIG"
        echo "socks pass { from: $IP/32 to: 0.0.0.0/0 }" >> "$CONFIG"
    else
        echo "‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c IP t·ª´ $DOMAIN"
    fi
done

systemctl restart danted
EOL

chmod +x /usr/local/bin/update-danted.sh

# ==========================
# 6. Cron job auto update
# ==========================
echo "[6/10] Th√™m cron job auto update m·ªói 5 ph√∫t..."
(crontab -l 2>/dev/null; echo "*/5 * * * * /usr/local/bin/update-danted.sh") | crontab -

# ==========================
# 7. Systemd override ƒë·ªÉ auto-restart
# ==========================
echo "[7/10] T·∫°o systemd override cho danted..."
mkdir -p /etc/systemd/system/danted.service.d
cat > /etc/systemd/system/danted.service.d/override.conf <<EOF
[Service]
Restart=always
RestartSec=3
EOF
systemctl daemon-reexec

# ==========================
# 8. Logrotate
# ==========================
echo "[8/10] C·∫•u h√¨nh logrotate..."
cat > /etc/logrotate.d/danted <<EOF
/var/log/danted.log {
    daily
    missingok
    rotate 7
    compress
    delaycompress
    notifempty
    create 640 proxy adm
    postrotate
        systemctl reload danted >/dev/null 2>&1 || true
    endscript
}
EOF

# ==========================
# 9. M·ªü port b·∫±ng UFW
# ==========================
echo "[9/10] M·ªü port UFW (22 v√† 1080)..."
ufw allow 22/tcp
ufw allow 1080/tcp
ufw --force enable

# ==========================
# 10. Reload & enable danted
# ==========================
echo "[10/10] Ho√†n t·∫•t! Kh·ªüi ƒë·ªông d·ªãch v·ª•..."
/usr/local/bin/update-danted.sh
systemctl enable danted
systemctl restart danted

echo "‚úÖ Ho√†n th√†nh! Ki·ªÉm tra tr·∫°ng th√°i:"
systemctl status danted --no-pager
